@model F1.Models.MVCregUser

@{
    ViewBag.Title = "LoanTracker";
    Layout = "~/Views/Shared/_Layout.cshtml";
    <link href="~/Login/StyleSheet3.css" rel="stylesheet" />
} 

<body>

    @using (Html.BeginForm("Authorize", "Tracker", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal" style="margin-top : 10%">
        <h2>Loan Tracker</h2>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.F_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.F_name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.F_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
            </div>
        </div>

      
        <div class="form-group">
            @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
            </div>
        </div>
    <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Track" class="btn btn-default" />
            </div>
        </div>
    </div>}


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")


</body>