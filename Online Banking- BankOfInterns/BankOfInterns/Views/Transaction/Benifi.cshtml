@model BankOfIntern.Models.Beneficiary

@{
    ViewBag.Title = "Benificiary";
}


<link href="~/Content/trans.css" rel="stylesheet" />
<fieldset>
    <div class="link1"><h3>Add Benificiary</h3></div>
</fieldset>
@{
    string url = Url.Action("Logout", "Logout");
}

    <input type="button" value="Logout" class="submit" onclick="window.location.href = '@url'" style="margin-top:-30px"/>
    
        <div class="OT1">
            <ul class="nav navbar-nav">
                <li class=" @(ViewContext.RouteData.Values["Action"].ToString()=="Beneficiary"?"active":"" )">
                    @Html.ActionLink("Beneficiary", "Benifi", "Transaction", new { area = "" }, new { id = "OT1", style = "color:rgb(198,199,198);text-decoration:none;background-color: #343434;font-size:20px" })
                </li>

                <li class=" @(ViewContext.RouteData.Values["Action"].ToString()=="Transaction"?"active":"" )">
                    @Html.ActionLink("Transaction", "Trans", "Transaction", new { area = "" }, new { id = "OT1", style = "color:rgb(198,199,198);text-decoration:none;background-color: #343434;font-size:20px" })
                </li>

            </ul>
        </div>
        @using (Html.BeginForm("Benifi", "Transaction", "Post"))
        {
            <div class="container">
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group" >
                        @Html.LabelFor(model => model.AccNo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AccNo, new { htmlAttributes = new { @class = "form-control" } })

                            @Html.ValidationMessageFor(model => model.AccNo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" >
                        @Html.LabelFor(model => model.BenAccNo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BenAccNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BenAccNo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" >
                        @Html.LabelFor(model => model.BenName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BenName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BenName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" >
                        @Html.LabelFor(model => model.NickName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NickName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NickName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" >
                        @Html.LabelFor(model => model.BenBankName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BenBankName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BenBankName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" >
                        @Html.LabelFor(model => model.IFSCCode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.IFSCCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IFSCCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BeneficiaryType, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @*@ @Html.EditorFor(model => model.BeneficiaryType, new { htmlAttributes = new { @class = "form-control" } })*@
                            @*@@Html.ValidationMessageFor(model => model.BeneficiaryType, "", new { @class = "text-danger" })*@
                            <div class="selecttag">
                                @Html.DropDownList("BeneficiaryType", new List<SelectListItem>
                                                           {   new SelectListItem{Text="Same Bank",Value="Sm",Selected=true},
                                                               new SelectListItem{Text="Different Bank", Value="Df"},
                                                           }, "Select Bank Type")
                                @Html.ValidationMessageFor(model => model.BeneficiaryType, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>


                    <div class="form-group" >
                        @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group-1">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" id="submit" value="Add Beneficiary" class="btnbtn-default" style="background-color: #343434; border: none; color: white; padding: 10px 20px; text-align: center; text-decoration: none; display: inline-block; margin-top:40%; cursor: pointer; border-radius: 16px; width: 10%; margin-left: 150px;"/>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-2">
                            <label class="label-success">@ViewBag.SuccessMessage</label>
                        </div>
                    </div>


                </div>

            </div>

        }
    
@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@


